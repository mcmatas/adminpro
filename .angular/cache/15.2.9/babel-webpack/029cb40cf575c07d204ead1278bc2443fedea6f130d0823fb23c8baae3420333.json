{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { AuthGuard } from '../guards/auth.guard';\nimport { PagesComponent } from './pages.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'dashboard',\n  component: PagesComponent,\n  canActivate: [AuthGuard],\n  // La logica del lazyload se hace de esta manera:\n  canLoad: [AuthGuard],\n  loadChildren: () => import('./child-routes.module').then(module => module.ChildRoutesModule)\n}];\nexport let PagesRoutingModule = /*#__PURE__*/(() => {\n  class PagesRoutingModule {}\n  PagesRoutingModule.ɵfac = function PagesRoutingModule_Factory(t) {\n    return new (t || PagesRoutingModule)();\n  };\n  PagesRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: PagesRoutingModule\n  });\n  PagesRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forChild(routes), RouterModule]\n  });\n  return PagesRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}